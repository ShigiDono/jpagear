# Compatibility
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

# Project name
PROJECT (runner)

# Project version
SET (${PROJECT_NAME}_MAJOR_VERSION 0)
SET (${PROJECT_NAME}_MINOR_VERSION 1)
SET (${PROJECT_NAME}_PATCH_LEVEL 0)

SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin")

SET (SPAWNER_PATH "${CMAKE_BINARY_DIR}/sp")
SET (BUILD_DIR "${CMAKE_BINARY_DIR}")
SET (ROOT_DIR "${PROJECT_SOURCE_DIR}")
SET (PROTOTYPE_TESTER "${ROOT_DIR}/bin/sp.exe")

INCLUDE(FindPythonInterp)

ADD_SUBDIRECTORY("${PROJECT_SOURCE_DIR}/../spawner/trunk/libspawner" libspawner)

#INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/inc")
INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/../spawner/trunk/libspawner")

#OPTION(MYPROJECT_DEBUG "Build the project using debugging code" ON)

SET (CMAKE_BUILD_TYPE Debug)

#IF(MYPROJECT_DEBUG)
#  SET_SOURCE_FILE_PROPERTIES(
#    libSource.c main.c
#    COMPILE_FLAGS -DDEBUG)
#ENDIF(MYPROJECT_DEBUG)

# fix relative path
FILE (GLOB SOURCES ./src/*.cpp)
FILE (GLOB HEADERS ./inc/*.h)

SET (PROJECT_EXECUTABLE ${PROJECT_NAME})
SET(CMAKE_EXE_LINKER_FLAGS "-static")


ADD_EXECUTABLE (${PROJECT_EXECUTABLE} ${SOURCES} ${HEADERS})

TARGET_LINK_LIBRARIES(${PROJECT_EXECUTABLE} libspawner)
TARGET_LINK_LIBRARIES(${PROJECT_EXECUTABLE} ntdll)